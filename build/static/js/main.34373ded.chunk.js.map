{"version":3,"sources":["components/ShellHeader/ShellHeader.tsx","components/ShellHeader/ShellHeader.styles.tsx","components/Nav/NavLink.js","components/Nav/NavLink.styles.js","components/Nav/Nav.js","components/Nav/Nav.styles.js","data/dummyContent.tsx","components/Inputs/Inputs.styles.tsx","components/Inputs/Inputs.tsx","components/Inputs/DropDown/DropDownExample.tsx","components/Inputs/TextField/TextFieldExample.tsx","components/Inputs/Toggle/ToggleExample.tsx","components/Inputs/Button/ButtonAnchor.tsx","components/Inputs/Link/LinkExample.tsx","components/Panel/Panel.content.tsx","components/Panel/PanelDefault.tsx","components/Content/PanelContentRow.tsx","App.tsx","App.styles.js","serviceWorker.ts","index.tsx"],"names":["ShellHeader","mergeStyleSets","root","display","height","flexDirection","justifyContent","alignItems","backgroundColor","NeutralColors","gray170","zIndex","waffleWrapper","waffle","width","selectors","button","color","gray150","logo","DefaultPalette","white","fontSize","FontSizes","size14","marginLeft","search","borderRadius","border","user","lineHeight","className","IconButton","iconProps","iconName","title","ariaLabel","SearchBox","Persona","imageUrl","TestImages","personaMale","size","PersonaSize","size28","presence","PersonaPresence","online","hidePersonaDetails","menuIconProps","PureComponent","NavLink","selected","this","props","flex","flexWrap","cursor","transition","textDecoration","position","gray50","gray80","top","left","content","accent","icon","black","navItemText","textOverflow","overflowX","whiteSpace","href","onClick","Icon","name","navData","Name","Nav","_onNavCollapseClicked","setState","isNavCollapsed","state","order","gray20","navList","listStyle","margin","padding","map","navLink","navLinkIndex","_renderNavLink","key","Selected","dummyContent","getUniqueName","history","strings","index","Math","floor","random","length","includes","push","getUniqueLabel","label","getUniqueDesc","getClassNames","checkboxDesc","fontWeight","p","marginTop","msCheckBox","minHeight","msLabelDesc","msChoiceOptionDescLabel","checkboxStyles","marginBottom","CheckboxDesc","Checkbox","defaultChecked","isChecked","styles","desc","genCheckboxes","amount","out","i","round","genRadio","defaultOption","isDescEnabled","historyDesc","options","defaultSelectedKey","labelDesc","option","getId","String","text","onRenderLabel","style","id","labelId","ChoiceGroup","onChange","ev","console","log","required","dropdownStyles","dropdown","itemType","DropdownMenuItemType","Header","disabled","Divider","stackTokens","childrenGap","DropdownBasicExample","Stack","tokens","ceil","Dropdown","placeholder","defaultSelectedKeys","multiSelect","getDropDown","TextFieldBasicExample","horizontal","TextField","defaultValue","readOnly","errorMessage","MaskedTextField","mask","getTextField","ToggleBasicExample","Toggle","onText","offText","_onChange","inlineLabel","getToggle","checked","ButtonAnchorExample","DefaultButton","target","RandomLink","Link","LeadP","getRandomizer","bottom","choiceFieldGroup","textAlign","ChoiceFieldGroup","type","defaultSelected","getControls","ChoiceField","ChoiceFieldGroupDesc","historyLabels","historyDescs","isCheckedEnabled","genCheckboxDesc","createContentItem","itemCountAdjust","components","weight","adjust","weights","component","selectionIndex","weightedRandom","componentToRender","randomNum","types","split","typeField","typeInput","inputCount","getPanelContent","num","parseInt","Fragment","limit","items","genContentItems","panel06","randomContentItems","panelStyles","headerText","PanelContent","showPanel","buttonText","panelNum","_layerHostId","_onRenderFooterContent","PrimaryButton","_hidePanel","marginRight","_showPanel","Panel","isOpen","PanelType","custom","onDismiss","closeButtonAriaLabel","onRenderFooterContent","isFooterAtBottom","customWidth","layerProps","hostId","isBlocking","LayerHost","overflow","React","Component","PanelContentRow","panels","_hoverColor","_addPanel","_getNextLink","lighten","hex","initializeIcons","PageContent","App","isFrameEnabled","URLSearchParams","window","location","has","searching","header","mainWrapper","pivotsAndSearch","pivotContainer","footer","searchBar","Fabric","data-is-scrollable","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34373ded.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { getClassNames } from './ShellHeader.styles';\r\nimport { IconButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport {\r\n  Persona,\r\n  PersonaSize,\r\n  PersonaPresence\r\n} from 'office-ui-fabric-react/lib/Persona';\r\nimport { TestImages } from 'office-ui-fabric-react/lib/common/TestImages';\r\n\r\nexport class ShellHeader extends PureComponent {\r\n  render() {\r\n    let { root, logo, waffleWrapper, waffle, search, user } = getClassNames();\r\n    return (\r\n      <div className={root}>\r\n        <div className={waffleWrapper}>\r\n          <div className={waffle}>\r\n            <IconButton iconProps={{ iconName: 'WaffleOffice365' }} title=\"WaffleOffice365\" ariaLabel=\"WaffleOffice365\" />\r\n          </div>\r\n          <div className={logo}>Microsoft 365 admin center</div>\r\n        </div>\r\n        <div className={search}>\r\n          <SearchBox\r\n          />\r\n        </div>\r\n        <div className={user}>\r\n          <Persona\r\n            imageUrl={TestImages.personaMale}\r\n            size={PersonaSize.size28}\r\n            presence={PersonaPresence.online}\r\n            hidePersonaDetails={true}\r\n          />\r\n          <IconButton\r\n            menuIconProps={{iconName: 'Help'}}\r\n            title=\"Help\"\r\n            ariaLabel=\"Help\"\r\n          />\r\n          <IconButton\r\n            menuIconProps={{iconName: 'Settings'}}\r\n            title=\"Settings\"\r\n            ariaLabel=\"Settings\"\r\n          />\r\n          <IconButton\r\n            menuIconProps={{iconName: 'Ringer'}}\r\n            title=\"Notification\"\r\n            ariaLabel=\"Notification\"\r\n          />\r\n          <IconButton\r\n            menuIconProps={{iconName: 'Message'}}\r\n            title=\"Messages\"\r\n            ariaLabel=\"Messages\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { mergeStyleSets } from '@uifabric/merge-styles';\r\nimport { DefaultPalette } from '@uifabric/styling';\r\nimport { NeutralColors } from '@uifabric/fluent-theme/lib/fluent';\r\nimport { FontSizes } from '@uifabric/fluent-theme';\r\n\r\nexport const getClassNames = () => {\r\n  return mergeStyleSets({\r\n    root: {\r\n        display: 'flex',\r\n        height: '48px',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: NeutralColors.gray170,\r\n        zIndex: 1\r\n    },\r\n    waffleWrapper: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    waffle: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      height: '48px',\r\n      width: '48px',\r\n      backgroundColor: 'transparent',\r\n      selectors: {\r\n        button: {\r\n          backgroundColor: 'transparent',\r\n          color: 'white',\r\n          selectors: {\r\n            ':hover': {\r\n              backgroundColor: 'transparent',\r\n              color: 'white',\r\n            }\r\n          }\r\n        },\r\n        ':hover': {\r\n          backgroundColor: NeutralColors.gray150\r\n        }\r\n\r\n      }\r\n    },\r\n    logo: {\r\n      color: DefaultPalette.white,\r\n      fontSize: FontSizes.size14,\r\n      marginLeft: 16\r\n    },\r\n    search: {\r\n      display: 'none',\r\n      selectors: {\r\n        '.ms-SearchBox': {\r\n          borderRadius: '2px',\r\n          border: 0\r\n        }\r\n      }\r\n    },\r\n    user: {\r\n      display: 'flex',\r\n      flexDirection: 'row-reverse',\r\n      alignItems: 'center',\r\n      selectors: {\r\n        '.ms-Button': {\r\n          height: '48px',\r\n          width: '48px',\r\n          backgroundColor: 'transparent',\r\n          color: DefaultPalette.white,\r\n          selectors: {\r\n            ':hover': {\r\n              backgroundColor: NeutralColors.gray150,\r\n              color: DefaultPalette.white\r\n            }\r\n          }\r\n        },\r\n        '.ms-Button-menuIcon': {\r\n          fontSize: '18px',\r\n          height: '18px',\r\n          lineHeight: '18px'\r\n        },\r\n        '.ms-Persona': {\r\n          width: '48px',\r\n          height: '48px',\r\n          justifyContent: 'center',\r\n          selectors: {\r\n            ':hover': {\r\n              backgroundColor: NeutralColors.gray150,\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n};","import React, { PureComponent } from 'react';\r\nimport { getClassNames } from './NavLink.styles';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nexport class NavLink extends PureComponent {\r\n  render() {\r\n    let { root, icon, navItemText } = getClassNames(this.props.selected);\r\n    return (\r\n      <a \r\n        href={this.props.href} \r\n        className={root}\r\n        onClick={this.props.onClick}\r\n      >\r\n        <Icon iconName={this.props.iconName} className={icon} />\r\n        <div className={navItemText}>{this.props.name}</div>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n","import { mergeStyleSets } from '@uifabric/merge-styles';\r\nimport { DefaultPalette } from '@uifabric/styling';\r\nimport { NeutralColors, FontSizes } from '@uifabric/fluent-theme/lib/fluent';\r\n\r\nexport const getClassNames = (selected) => {\r\n  return mergeStyleSets({\r\n    root: {\r\n      display: 'flex',\r\n      flex: '1 1 auto',\r\n      flexDirection: 'row',\r\n      flexWrap: 'nowrap',\r\n      alignItems: 'center',\r\n      cursor: 'pointer',\r\n      transition: 'background-color 200ms',\r\n      backgroundColor: 'transparent',\r\n      textDecoration: 'none',\r\n      position: 'relative',\r\n      selectors: {\r\n        ':hover': {\r\n          backgroundColor: NeutralColors.gray50\r\n        },\r\n        ':active': {\r\n          backgroundColor: NeutralColors.gray80\r\n        },\r\n        ':before': {\r\n          position: 'absolute',\r\n          display: selected ? 'block' : 'none',\r\n          top: '11px',\r\n          left: '4px',\r\n          content: '\"\"',\r\n          height: '26px',\r\n          width: '2px',\r\n          backgroundColor: DefaultPalette.accent\r\n        }\r\n      }\r\n    },\r\n    icon: {\r\n      display: 'flex',\r\n      fontSize: FontSizes.icon,\r\n      lineHeight: '48px',\r\n      color: DefaultPalette.black,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flex: '0 0 48px'\r\n    },\r\n    navItemText: {\r\n      flex: '1 1 auto',\r\n      lineHeight: '48px',\r\n      textOverflow: 'ellipsis',\r\n      overflowX: 'hidden',\r\n      whiteSpace: 'nowrap',\r\n      color: DefaultPalette.black,\r\n      fontSize: FontSizes.size14\r\n    }\r\n  });\r\n};","import React, { PureComponent } from 'react';\r\nimport { getClassNames } from './Nav.styles';\r\nimport { NavLink } from './NavLink';\r\n\r\n// Has expanded/collapsed state\r\n// Passes that to navLink\r\n// \r\n\r\nconst navData = [\r\n  {\r\n    Name: \"Home\",\r\n    Icon: \"Home\"\r\n  },\r\n  {\r\n    Name: \"Users\",\r\n    Icon: \"Contact\"\r\n  },\r\n  {\r\n    Name: \"Groups\",\r\n    Icon: \"Group\"\r\n  },\r\n  {\r\n    Name: \"Roles\",\r\n    Icon: \"RecruitmentManagement\",\r\n    // Selected: true\r\n  },\r\n  {\r\n    Name: \"Billing\",\r\n    Icon: \"PaymentCard\"\r\n  },\r\n  {\r\n    Name: \"Support\",\r\n    Icon: \"Headset\"\r\n  },\r\n  {\r\n    Name: \"Settings\",\r\n    Icon: \"Settings\"\r\n  },\r\n  {\r\n    Name: \"Setup\",\r\n    Icon: \"Repair\"\r\n  },\r\n  {\r\n    Name: \"Reports\",\r\n    Icon: \"Chart\"\r\n  },\r\n  {\r\n    Name: \"Health\",\r\n    Icon: \"Health\"\r\n  },\r\n  {\r\n    Name: \"Groups\",\r\n    Icon: \"Group\"\r\n  }\r\n];\r\n\r\nexport class Nav extends PureComponent {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNavCollapsed: this.props.isNavCollapsed ? this.props.isNavCollapsed : false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let { root, navList } = getClassNames(this.state.isNavCollapsed);\r\n\r\n    return (\r\n      <nav className={root}>\r\n        <ul className={navList}>\r\n          <NavLink\r\n            href={'#'}\r\n            iconName={'GlobalNavButton'}\r\n            onClick={this._onNavCollapseClicked}\r\n          />\r\n          {navData.map((navLink, navLinkIndex) => {\r\n            return this._renderNavLink(navLink, navLinkIndex);\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  _renderNavLink(navLink, navLinkIndex) {\r\n    if (!navLink) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <li key={navLinkIndex}>\r\n        <NavLink\r\n          href={'#'}\r\n          iconName={navLink.Icon}\r\n          name={navLink.Name}\r\n          selected={navLink.Selected}\r\n        />\r\n      </li>\r\n    )\r\n  }\r\n\r\n  _onNavCollapseClicked = () => {\r\n    this.setState({\r\n      isNavCollapsed: !this.state.isNavCollapsed\r\n    });\r\n  };\r\n}\r\n","import { mergeStyleSets } from '@uifabric/merge-styles';\r\nimport { NeutralColors } from '@uifabric/fluent-theme/lib/fluent';\r\n\r\nexport const getClassNames = (isNavCollapsed) => {\r\n  return mergeStyleSets({\r\n    root: {\r\n        width: isNavCollapsed ? '48px' : '270px',\r\n        order: -1,\r\n        zIndex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        backgroundColor: NeutralColors.gray20,\r\n        transition: 'width 200ms'\r\n    },\r\n    navList: {\r\n      listStyle: 'none',\r\n      margin: '0',\r\n      padding: 0\r\n    }\r\n  });\r\n};","import * as React from \"react\";\nimport { Link } from \"office-ui-fabric-react/lib/Link\";\nexport const dummyContent = {\n  leads: [\n    \"Ask why until it becomes painful, until you’re sick of the word. And give it character — there’s enough ‘nice’ design in the world. Whether sublime, exuberant, minimal or maximal, give your work personality. Don’t be afraid to be awkward — what feels comfortable today, will be boring tomorrow.\"\n  ],\n  groupHeadings: [\"If you can design one thing, you can design everything.\"],\n  labels: [\n    \"Design can be art.\",\n    \"Design can be aesthetics.\",\n    \"Design is so simple, that’s why it is so complicated.\",\n    \"Practice safe design: Use a concept.\",\n    \"Good design is obvious. Great design is transparent.\",\n    \"Design is thinking made visual.\"\n  ],\n  descriptions: [\n    \"Good design is obvious. Great design is transparent.\",\n    \"Design is so simple, that’s why it is so complicated.\",\n    \"Styles come and go. Good design is a language, not a style. Good design is obvious. Great design is transparent.\"\n  ],\n  names: [\n    \"El Lissitzky\",\n    \"Joseph Müller Brockmann\",\n    \"Emil Ruder\",\n    \"Wolfgang Weingart\"\n  ]\n};\n\nexport const getUniqueName = (history: number[] = []): string =>{\n  const strings: string[] = dummyContent.names;\n  const index: number = Math.floor(Math.random() * strings.length);\n  if (history.includes(index)) {\n    if (history.length === strings.length) {\n      history.length = 0;\n    }\n    return getUniqueName(history);\n  } else {\n    history.push(index);\n    const name = strings[index];\n    return name;\n  }\n}\nexport const getUniqueLabel = (history: number[] = []): string => {\n  const strings: string[] = dummyContent.labels;\n  const index: number = Math.floor(Math.random() * strings.length);\n  // index already in history so recursively call again.\n  if (history.includes(index)) {\n    // If our history is as long as the dummy length reset history.\n    if (history.length === strings.length) {\n      history.length = 0;\n    }\n    return getUniqueLabel(history);\n  } else {\n    // Put index in history and return label.\n    history.push(index);\n    const label = strings[index];\n    return label;\n  }\n};\nexport const getUniqueDesc = (history: number[] = []): string => {\n  const strings: string[] = dummyContent.descriptions;\n  const index: number = Math.floor(\n    Math.random() * strings.length\n  );\n  if (history.includes(index)) {\n    if (history.length === strings.length) {\n      history.length = 0;\n    }\n    return getUniqueDesc(history);\n  } else {\n    history.push(index);\n    const label = strings[index];\n    return label;\n  }\n};\n","import { mergeStyleSets } from \"@uifabric/merge-styles\";\nimport { NeutralColors, FontSizes } from \"@uifabric/fluent-theme/lib/fluent\";\n\nexport const getClassNames = () => {\n  return mergeStyleSets({\n    checkboxDesc: {\n      fontWeight: \"600\",\n      selectors: {\n        p: {\n          lineHeight: \"1.46\",\n          fontWeight: \"normal\",\n          marginLeft: \"28px\",\n          marginTop: \"-15px\"\n        },\n        \"& label\": {\n          fontWeight: \"600\"\n        }\n      }\n    },\n    msCheckBox: {\n      fontSize: \"14px\",\n      fontWeight: \"400\",\n      minHeight: \"36px\"\n    },\n    msLabelDesc: {\n      display: \"block\",\n      marginLeft: \"25px\"\n    },\n    msChoiceOptionDescLabel: {\n      fontWeight: \"600\",\n      lineHeight: \"1.46\"\n    }\n  });\n};\n","import React from \"react\";\nimport { getClassNames } from \"./Inputs.styles\";\nimport {\n  Checkbox,\n  ChoiceGroup,\n  getId,\n  IChoiceGroupOptionProps\n} from \"office-ui-fabric-react\";\nimport {\n  getUniqueLabel,\n  getUniqueDesc,\n  getUniqueName\n} from \"../../data/dummyContent\";\n\n\nconst checkboxStyles: any = (): any => {\n  return {\n    root: {\n      marginTop: \"10px\",\n      lineHeight: \"1.46\",\n      fontWeight: \"600\"\n    },\n    selectors: {\n      \"&\": {\n      fontSize: \"14px\",\n      fontWeight: \"400\",\n      minHeight: \"36px\",\n      marginBottom: \"4px\"\n    },\n    \"& + p\": {\n      marginTop: \"-6px\"\n    }\n    }\n  };\n};\n\n\nconst CheckboxDesc = (props: any) => {\n  return (\n    <div className={getClassNames().checkboxDesc}>\n      <Checkbox\n        label={props.label}\n        defaultChecked={props.isChecked}\n        styles={checkboxStyles}\n      />\n      <p>{props.desc}</p>\n    </div>\n  );\n};\nexport const genCheckboxDesc = (\n         amount: number = 2,\n         isChecked?: boolean\n       ): any[] => {\n         const out: any[] = [];\n         const historyLabels: number[] = [];\n         const historyDescs: number[] = [];\n         for (let i = 0; i < amount; i++) {\n           const label: string = getUniqueLabel(historyLabels);\n           const desc: string = getUniqueDesc(historyDescs);\n          const isCheckedEnabled =\n            typeof isChecked === \"undefined\"\n              ? !!Math.round(Math.random() * 1)\n              : isChecked;\n           out.push(\n             <CheckboxDesc\n               label={label}\n               desc={desc}\n               isChecked={isCheckedEnabled}\n             />\n           );\n         }\n         return out;\n       };\n\n// Generate checkboxes with random labels\nexport const genCheckboxes = (amount: number = 2, isChecked?: boolean): JSX.Element[] => {\n  const out: JSX.Element[] = [];\n  const history: number[] = [];\n  for (let i = 0; i < amount; i++) {\n    const label: string  = getUniqueLabel(history);\n    const defaultChecked: boolean = (typeof isChecked !== \"undefined\") ? isChecked : !!Math.round(Math.random() * 1);\n    out.push(\n      <Checkbox\n        label={label}\n        defaultChecked={defaultChecked}\n        styles={checkboxStyles}\n      />\n    );\n  }\n  return out;\n};\n\n\nexport const genRadio = (\n  amount: number,\n  defaultOption: number,\n  isDescEnabled?: boolean\n): JSX.Element[] => {\n  const out: JSX.Element[] = [];\n  const history: number[] = [];\n  const historyDesc: number[] = [];\n  isDescEnabled = (typeof isDescEnabled === \"undefined\") ? false : isDescEnabled;\n  const options: any[] = [];\n  let defaultSelectedKey: string = \"\";\n  for (let i = 0; i < amount; i++) {\n    const labelDesc: string = getUniqueDesc(historyDesc);\n    const option: {\n      key: string;\n      text: string | JSX.Element;\n      disabled?: boolean;\n      onRenderLabel?: any;\n    } = {\n      key: getId(String(i)),\n      text: (amount <= 4) ? getUniqueName(history) : getUniqueLabel(history),\n      onRenderLabel: (props: IChoiceGroupOptionProps): JSX.Element => {\n        return (\n          <div style={{ marginBottom: \"4px\" }}>\n            <span\n              id={props.labelId}\n              className={\n                \"ms-ChoiceFieldLabel \" +\n                (isDescEnabled ? getClassNames().msChoiceOptionDescLabel : \"\")\n              }\n            >\n              {props.text}\n            </span>\n            {isDescEnabled ? (\n              <span className={getClassNames().msLabelDesc}>{labelDesc}</span>\n            ) : (\n              \"\"\n            )}\n          </div>\n        );\n      }\n    };\n    if (i === defaultOption - 1) {\n      defaultSelectedKey = option.key;\n    }\n    options.push(option);\n  }\n\n  out.push(\n    <ChoiceGroup\n      className=\"defaultChoiceGroup\"\n      defaultSelectedKey={defaultSelectedKey}\n      options={options}\n      onChange={ev => {\n        console.log(ev);\n      }}\n      label=\"Pick one\"\n      required={true}\n      styles={{\n        root: {\n          minHeight: \"36px\",\n          selectors: {\n            \".ms-ChoiceField\": {\n              minHeight: \"36px\",\n              marginTop: \"0\",\n              marginBottom: \"4px\"\n            }\n          }\n        }\n      }}\n    />\n  );\n  return out;\n};\n","import * as React from \"react\";\nimport { IStackTokens, Stack } from \"office-ui-fabric-react/lib/Stack\";\nimport {\n  Dropdown,\n  DropdownMenuItemType,\n  IDropdownStyles,\n  IDropdownOption\n} from \"office-ui-fabric-react/lib/Dropdown\";\n\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  dropdown: { width: 300 }\n};\n\nconst options: IDropdownOption[] = [\n  {\n    key: \"fruitsHeader\",\n    text: \"Fruits\",\n    itemType: DropdownMenuItemType.Header\n  },\n  { key: \"apple\", text: \"Apple\" },\n  { key: \"banana\", text: \"Banana\" },\n  { key: \"orange\", text: \"Orange\", disabled: true },\n  { key: \"grape\", text: \"Grape\" },\n  { key: \"divider_1\", text: \"-\", itemType: DropdownMenuItemType.Divider },\n  {\n    key: \"vegetablesHeader\",\n    text: \"Vegetables\",\n    itemType: DropdownMenuItemType.Header\n  },\n  { key: \"broccoli\", text: \"Broccoli\" },\n  { key: \"carrot\", text: \"Carrot\" },\n  { key: \"lettuce\", text: \"Lettuce\" }\n];\n\nconst stackTokens: IStackTokens = { childrenGap: 20 };\n\nexport const DropdownBasicExample: React.StatelessComponent = () => {\n  const getDropDown = () => {\n    const randomNum = Math.ceil(Math.random() * 3);\n    switch (randomNum) {\n      case 1: return (\n      <Dropdown\n        placeholder=\"Select an option\"\n        label=\"Basic uncontrolled example\"\n        options={options}\n        styles={dropdownStyles}\n      />\n      );\n      case 2: return (\n      <Dropdown\n        label=\"Disabled example with defaultSelectedKey\"\n        defaultSelectedKey=\"broccoli\"\n        options={options}\n        disabled={true}\n        styles={dropdownStyles}\n      />\n      );\n      case 3: return (\n      <Dropdown\n        placeholder=\"Select options\"\n        label=\"Multi-select uncontrolled example\"\n        defaultSelectedKeys={[\"apple\", \"banana\", \"grape\"]}\n        multiSelect\n        options={options}\n        styles={dropdownStyles}\n      />\n      );\n    }\n  }\n  return (\n    <Stack tokens={stackTokens}>\n      {getDropDown()}\n    </Stack>\n  );\n};\n","import * as React from \"react\";\nimport {\n  TextField,\n  MaskedTextField\n} from \"office-ui-fabric-react/lib/TextField\";\nimport { Stack, IStackProps } from \"office-ui-fabric-react/lib/Stack\";\n\nexport const TextFieldBasicExample: React.StatelessComponent = () => {\n  // TextFields don't have to be inside Stacks, we're just using Stacks for layout\n  const columnProps: Partial<IStackProps> = {\n    tokens: { childrenGap: 15 },\n    styles: { root: { width: 300 } }\n  };\n\n  const getTextField = () => {\n    const randomNum = Math.ceil(Math.random() * 10);\n    switch (randomNum) {\n      case 1: return (<TextField label=\"Standard\" />);\n      case 2: return (<TextField label=\"Disabled\" disabled defaultValue=\"I am disabled\" />);\n      case 3: return (<TextField label=\"Read-only\" readOnly defaultValue=\"I am read-only\" />);\n      case 4: return (<TextField label=\"Required \" required />);\n      case 5: return (<TextField required />);\n      case 6: return (<TextField label=\"With error message\" errorMessage=\"Error message\" />);\n      case 7: return (\n        <MaskedTextField\n          label=\"With input mask\"\n          mask=\"m\\ask: (999) 999 - 9999\"\n        />\n      );\n      case 8: return (\n        <TextField label=\"With an icon\" iconProps={{ iconName: \"Calendar\" }} />\n      );\n      case 9: return (\n        <TextField\n          label=\"With placeholder\"\n          placeholder=\"Please enter text here\"\n        />\n      );\n      case 10: return (\n        <TextField\n          label=\"Disabled with placeholder\"\n          disabled\n          placeholder=\"I am disabled\"\n        />\n      );\n    }\n  }\n\n  return (\n    <Stack\n      horizontal\n      tokens={{ childrenGap: 50 }}\n      styles={{ root: { width: \"100%\" } }}\n    >\n      <Stack {...columnProps}>\n        {getTextField()}\n      </Stack>\n    </Stack>\n  );\n};\n","import * as React from \"react\";\nimport { Toggle } from \"office-ui-fabric-react/lib/Toggle\";\nimport { Stack, IStackTokens } from \"office-ui-fabric-react/lib/Stack\";\n\nconst stackTokens: IStackTokens = { childrenGap: 10 };\n\nexport const ToggleBasicExample: React.FunctionComponent = () => {\n  const getToggle = () => {\n    const randomNum = Math.ceil(Math.random() * 8);\n      switch (randomNum) {\n        case 1: return (\n        <Toggle\n        label=\"Enabled and checked\"\n        defaultChecked\n        onText=\"On\"\n        offText=\"Off\"\n        onChange={_onChange}\n      />);\n      case 2: return (\n      <Toggle\n        label=\"Enabled and unchecked\"\n        onText=\"On\"\n        offText=\"Off\"\n        onChange={_onChange}\n      />);\n      case 3: return (\n      <Toggle\n        label=\"Disabled and checked\"\n        defaultChecked\n        disabled\n        onText=\"On\"\n        offText=\"Off\"\n      />);\n      case 4: return (\n      <Toggle\n        label=\"Disabled and unchecked\"\n        disabled\n        onText=\"On\"\n        offText=\"Off\"\n      />);\n      case 5: return (\n      <Toggle\n        label=\"With inline label\"\n        inlineLabel\n        onText=\"On\"\n        offText=\"Off\"\n        onChange={_onChange}\n      />);\n      case 6: return (\n      <Toggle\n        label=\"Disabled with inline label\"\n        inlineLabel\n        disabled\n        onText=\"On\"\n        offText=\"Off\"\n      />);\n      case 7: return (\n      <Toggle\n        label=\"With inline label and without onText and offText\"\n        inlineLabel\n        onChange={_onChange}\n      />);\n      case 8: return (\n      <Toggle\n        label=\"Disabled with inline label and without onText and offText\"\n        inlineLabel\n        disabled\n      />);\n    }\n  }\n  return (\n    <Stack tokens={stackTokens}>\n      {getToggle()}\n    </Stack>\n  );\n};\n\nfunction _onChange(ev: React.MouseEvent<HTMLElement>, checked?: boolean) {\n  console.log(\"toggle is \" + (checked ? \"checked\" : \"not checked\"));\n}\n","import * as React from \"react\";\nimport { DefaultButton } from \"office-ui-fabric-react\";\n\nexport interface IButtonExampleProps {\n  // These are set based on the toggles shown above the examples (not needed in real code)\n  disabled?: boolean;\n  checked?: boolean;\n}\n\nexport const ButtonAnchorExample: React.FunctionComponent<\n  IButtonExampleProps\n> = props => {\n  const { disabled, checked } = props;\n\n  // The href causes this button to be rendered as an anchor.\n  return (\n    <DefaultButton\n      href=\"http://bing.com\"\n      target=\"_blank\"\n      title=\"let us bing!\"\n      disabled={disabled}\n      checked={checked}\n      styles={{\n        root: {\n          display: \"inline-block\",\n          margin: \"14px 14px 14px 0\"\n        }\n      }}\n    >\n      Bing\n    </DefaultButton>\n  );\n};\n","import * as React from \"react\";\nimport { Link } from \"office-ui-fabric-react/lib/Link\";\n\nimport { getUniqueLabel } from \"../../../data/dummyContent\";\n\nexport const LinkBasicExample: React.FunctionComponent = () => {\n  return (\n    <div>\n      <p>\n        When a link has an href,{\" \"}\n        <Link href=\"http://dev.office.com/fabric/components/link\">\n          it renders as an anchor tag.\n        </Link>{\" \"}\n        Without an href, <Link>the link is rendered as a button</Link>. You can\n        also use the disabled attribute to create a{\" \"}\n        <Link\n          disabled={true}\n          href=\"http://dev.office.com/fabric/components/link\"\n        >\n          disabled link.\n        </Link>\n      </p>\n      <p>\n        It's not recommended to use Links with imgs because Links are meant to\n        render textual inline content. Buttons are inline-block or in the case\n        of imgs, block. However, it is possible to create a linked image button\n        by making a button with an unstyled variant and adding the img content\n        and href source to that.\n      </p>\n    </div>\n  );\n};\n\nexport const RandomLink = (history: number[] = []): JSX.Element => {\n  return (\n    <Link href=\"javascript:;\" styles={{\n      root: {\n        display: \"inline-block\"\n      }\n    }}>{getUniqueLabel()}</Link>\n  )\n}\n","import React from \"react\";\n// import { Checkbox, ChoiceGroup, getId } from \"office-ui-fabric-react\";\nimport \"./Panel.content.css\";\nimport { mergeStyleSets } from \"@uifabric/merge-styles\";\n// import { getClassNames } from \"../Inputs/Inputs.styles\";\nimport { dummyContent } from \"../../data/dummyContent\";\n\nimport { genCheckboxes, genCheckboxDesc, genRadio } from \"../Inputs/Inputs\";\nimport { DropdownBasicExample } from \"../Inputs/DropDown/DropDownExample\";\nimport { TextFieldBasicExample } from \"../Inputs/TextField/TextFieldExample\";\nimport { ToggleBasicExample } from \"../Inputs/Toggle/ToggleExample\";\nimport { ButtonAnchorExample } from \"../Inputs/Button/ButtonAnchor\"; \nimport { RandomLink } from \"../Inputs/Link/LinkExample\";\nimport \"./weighted-random.d\";\nimport weightedRandom from \"weighted-random\";\n\nconst LeadP = (): JSX.Element => {\n  return (\n    <p className=\"lead\">{dummyContent.leads[0]}</p>\n  )\n};\n\nfunction getRandomizer(bottom: number, top: number) {\n  return function() {\n    return Math.floor(Math.random() * (1 + top - bottom)) + bottom;\n  };\n}\n\nconst getClassNames = () =>\n  mergeStyleSets({\n    choiceFieldGroup: {\n      selectors: {\n        \"& > p\": {\n          lineHeight: \"20px\",\n          textAlign: \"justify\",\n          fontWeight: \"600\",\n          color: \"#333\",\n          marginBottom: \"20px\"\n        },\n        \"& + .ms-ChoiceFieldGroup\": {\n          marginTop: \"46px\"\n        },\n        \"&\":{\n          marginBottom: \"27px\"\n        }\n      }\n    }\n  });\n\n// TODO: combine shared logic of ChoiceField & ChoiceFieldGroup\n// Group of choice fields (checkbox or radios)\n// If checkbox defaultSelected is ignored\nconst ChoiceFieldGroup = (props: any) => {\n  const getControls = (type: string) => {\n    return type === \"radio\"\n      ? genRadio(props.length, defaultSelected)\n      : genCheckboxes(props.length, props.isChecked);\n  };\n\n  const type = !!props.type ? props.type :\n   (Math.round(Math.random() * 1) === 0) ? \"radio\" : \"checkbox\";\n\n  const defaultSelected = props.defaultSelected || Math.round(Math.random() * props.length);\n  return (\n    <div className={\"ms-ChoiceFieldGroup \" + getClassNames().choiceFieldGroup}>\n      <p>If you can design one thing, you can design everything.</p>\n      {getControls(type)}\n    </div>\n  );\n};\n// Single Choice Field \nconst ChoiceField = (props: any) => {\n  const getControls = (type: string) => {\n    return type === \"radio\"\n      ? genRadio(props.length, defaultSelected)\n      : genCheckboxes(props.length, props.isChecked);\n  };\n  const type = !!props.type ? props.type : (Math.round(Math.random() * 1) === 0) ? \"radio\" : \"checkbox\";\n  const defaultSelected = props.defaultSelected || Math.round(Math.random() * props.length);\n  return <>{getControls(type)}</>;\n}\n// Groups of choices with descriptions after each label\nconst ChoiceFieldGroupDesc = (props: any) => {\n  const getControls = (type: string) => {\n    // console.log(\"props.isChecked\");\n    // console.log(props.isChecked)\n    return type === \"radio\"\n    ? genRadio(props.length, defaultSelected, true)\n    : genCheckboxDesc(props.length, props.isChecked);\n  }\n  const type = !!props.type ? props.type :\n   (Math.round(Math.random() * 1) === 0) ? \"radio\" : \"checkbox\";\n\n  const defaultSelected = props.defaultSelected || Math.round(Math.random() * props.length);\n  return (\n    <div className={\"ms-ChoiceFieldGroup \" + getClassNames().choiceFieldGroup}>\n      <p>If you can design one thing, you can design everything.</p>\n      {getControls(type)}\n    </div>\n  );\n};\n\ninterface IContentItem {\n  type?: string;\n  length?: string;\n  defaultSelected?: string;\n}\n// Function to return content item \n// if type, length or defaultSelected not provided \n// then they are assigned at random.\nconst createContentItem = ({type, length, defaultSelected}: IContentItem = {}): { component: any, adjust: number } => {\n  let itemCountAdjust: number = 0;\n  type = type || (() => {\n    // giving components a weight to give some control to the randomness of certain elements.\n    const components = [\n      { weight: 5.0, type: \"ChoiceFieldGroup\", adjust: 0 },\n      { weight: 1.0, type: \"ChoiceField\", adjust: 0 },\n      { weight: 3.0, type: \"ChoiceFieldGroupDesc\", adjust: 0 },\n      { weight: 1.0, type: \"LeadP\", adjust: -1 },\n      { weight: 1.0, type: \"DropdownBasicExample\", adjust: -1 },\n      { weight: 1.5, type: \"TextFieldBasicExample\", adjust: -1 },\n      { weight: 1.5, type: \"ToggleBasicExample\", adjust: -1 },\n      { weight: 0.75, type: \"ButtonAnchorExample\", adjust: -1 },\n      { weight: 1, type: \"Link\", adjust: -1 }\n    ];\n    var weights = components.map(function(component) {\n      return component.weight;\n    });\n    var selectionIndex = weightedRandom(weights); // 0, 1, or 2\n\n    var componentToRender = components[selectionIndex].type;\n    itemCountAdjust = components[selectionIndex].adjust\n    return componentToRender;\n\n  })();\n  const randomNum = getRandomizer(2, 12);\n  \n  const types = type.split(\"--\");\n  const typeField = types[0];\n  const typeInput = types[1];\n  const inputCount = length ? length : randomNum();\n  switch (typeField) {\n    case \"ChoiceFieldGroup\":\n      return {\n        component: <ChoiceFieldGroup type={typeInput} length={inputCount} />,\n        adjust: itemCountAdjust\n      };\n    case \"ChoiceField\":\n      return {\n        component: <ChoiceField type={typeInput} length={inputCount} />,\n        adjust: itemCountAdjust\n      };\n    case \"ChoiceFieldGroupDesc\":\n      return {\n        component: (\n          <ChoiceFieldGroupDesc type={typeInput} length={inputCount} />\n        ),\n        adjust: itemCountAdjust\n      };\n    case \"LeadP\":\n      return {\n        component: <LeadP />,\n        adjust: itemCountAdjust\n      };\n    case \"DropdownBasicExample\":\n      return {\n        component: <DropdownBasicExample />,\n        adjust: itemCountAdjust\n      };\n    case \"TextFieldBasicExample\":\n      return {\n        component: <TextFieldBasicExample />,\n        adjust: itemCountAdjust\n      };\n    case \"ToggleBasicExample\":\n      return {\n        component: <ToggleBasicExample />,\n        adjust: itemCountAdjust\n      };\n    case \"ButtonAnchorExample\":\n      return {\n        component: <ButtonAnchorExample />,\n        adjust: itemCountAdjust\n      };\n    case \"Link\":\n      return {\n        component: RandomLink(),\n        adjust: itemCountAdjust\n      }\n    default:\n      return { component: \"\", adjust: 0 };\n  }\n};\n//\n// Function to get configured panel content\nexport const getPanelContent = (num: any) => {\n  num = parseInt(num);\n  switch (num) {\n    case 1:\n      return panel01();\n    case 2:\n      return panel02();\n    case 3:\n      return panel03();\n    case 4:\n      return panel04();\n    case 5:\n      return panel05();\n    case 6:\n      return panel06();\n    case 7:\n      return randomContentItems();\n  };\n}\n\nfunction panel01() {\n  return (\n    <React.Fragment>\n      <LeadP />\n      <ChoiceFieldGroup length=\"12\" isChecked={true} type=\"checkbox\" />\n    </React.Fragment>\n  );\n}\nfunction panel02() {\n  return (\n    <React.Fragment>\n      <LeadP />\n      <ChoiceFieldGroup type=\"checkbox\" length=\"6\" isChecked={true} />\n      <ChoiceFieldGroup length=\"3\" isChecked={true} type=\"checkbox\" />\n    </React.Fragment>\n  );\n}\nfunction panel03() {\n  return (\n    <React.Fragment>\n      <LeadP />\n      <ChoiceFieldGroupDesc length=\"4\" type=\"checkbox\" isChecked={true} />\n      <ChoiceFieldGroup length=\"4\" isChecked={true} type=\"checkbox\" />\n    </React.Fragment>\n  );\n}\nfunction panel04() {\n  return genCheckboxes(5);\n}\nfunction panel05() {\n  return (\n    <>\n      <LeadP />\n      <ChoiceFieldGroup length=\"12\" defaultSelected=\"1\" type=\"radio\" />\n    </>\n  );\n}\nfunction panel06() {\n  console.log(\"panel06\");\n  const genContentItems = (limit:number) => {\n    const items: any[] = [];\n    for(let i=0; i < limit; i++) {\n      const { component, adjust } = createContentItem();\n      items.push(component);\n      limit = limit - adjust;\n    }\n    return items;\n  }\n  return <>{genContentItems(2)}</>;\n}\n\nfunction randomContentItems() {\n    console.log(\"panel07\");\n    const genContentItems = (limit: number) => {\n      const items: any[] = [];\n      for (let i = 0; i < limit; i++) {\n        const { component, adjust } = createContentItem();\n        items.push(component);\n        // when components are only one line use adjust to add to the limit \n        // this allows more components to be rendered per panel.\n        limit = limit - adjust;\n      }\n      return items;\n    };\n    return <>{genContentItems(2)}</>;\n}\n\n\n\n","import React from \"react\";\nimport {\n  DefaultButton,\n  PrimaryButton,\n  Panel,\n  PanelType,\n  Checkbox,\n  IStyle,\n  LayerHost,\n  getId\n} from \"office-ui-fabric-react\";\nimport { getPanelContent } from \"./Panel.content\";\nimport color from \"color\";\n// declare module 'color';\n\nconst panelStyles: any = (): any => {\n  return {\n    headerText: {\n      color: \"rgb(50, 49, 48)\",\n      fontSize: \"32px\",\n      fontWeight: \"700\"\n    },\n    root: {\n      // background: \"green\", // root style (example)\n      selectors: {}\n    }\n  };\n};\n\n// Panel Class\ninterface IPanelContentState {\n  showPanel: boolean;\n  buttonText: string;\n  headerText: string;\n}\nexport class PanelContent extends React.Component<\n  {\n    buttonText: string;\n    headerText: string;\n    panelNum: string;\n    styles?: any;\n  },\n  IPanelContentState\n> {\n  public state = {\n    showPanel: true,\n    buttonText: \"Open Panel\",\n    headerText: \"Check box\"\n  };\n  private panelNum: number = 1;\n  private _layerHostId: string = \"\";\n  constructor(props: any) {\n    super(props);\n    if (props.buttonText) this.state.buttonText = props.buttonText;\n    if (props.headerText) this.state.headerText = props.headerText;\n    this._layerHostId = getId(\"PanelHost\");\n  }\n\n  public render() {\n    return (\n      <div\n        style={{\n          position: \"relative\",\n          width: \"592px\",\n          display: \"inline-block\",\n          margin: \"15px\",\n          border: \"1px solid #efefef\",\n          whiteSpace: \"normal\"\n        }}\n      >\n        <Panel\n          isOpen={this.state.showPanel}\n          type={PanelType.custom}\n          onDismiss={this._hidePanel}\n          headerText={this.state.headerText}\n          closeButtonAriaLabel=\"Close\"\n          onRenderFooterContent={this._onRenderFooterContent}\n          isFooterAtBottom={true}\n          customWidth=\"592px\"\n          styles={panelStyles}\n          layerProps={{ hostId: this._layerHostId }}\n          isBlocking={false}\n        >\n          {getPanelContent(this.props.panelNum)}\n        </Panel>\n        <LayerHost\n          id={this._layerHostId}\n          style={{\n            position: \"relative\",\n            height: \"calc(100vh - 60px)\",\n            overflow: \"hidden\",\n            padding: \"15px\"\n          }}\n          onClick={this._showPanel}\n        >\n          {/* <DefaultButton\n            secondaryText=\"Opens the Sample Panel\"\n            onClick={this._showPanel}\n            text={this.state.buttonText}\n          /> */}\n        </LayerHost>\n      </div>\n    );\n  }\n\n  private _onRenderFooterContent = (): JSX.Element => {\n    return (\n      <div>\n        <PrimaryButton onClick={this._hidePanel} style={{ marginRight: \"8px\" }}>\n          Save\n        </PrimaryButton>\n        <DefaultButton onClick={this._hidePanel}>Cancel</DefaultButton>\n      </div>\n    );\n  };\n\n  private _showPanel = () => {\n    this.setState({ showPanel: true });\n  };\n\n  private _hidePanel = () => {\n    this.setState({ showPanel: false });\n  };\n}\n\n\n","import React from \"react\";\nimport {\n  LayerHost,\n  getId\n} from \"office-ui-fabric-react\";\nimport color from \"color\";\nimport { PanelContent } from \"../Panel/PanelDefault\";\n\nexport class PanelContentRow extends React.Component<{}, {}> {\n  public state = {\n    panels: [\n        <PanelContent\n          buttonText=\"Open Panel - Default Pane - Check box 1\"\n          headerText=\"Check box\"\n          panelNum=\"1\"\n        />,\n        <PanelContent\n          buttonText=\"Open Panel - Default Pane - Check box 2\"\n          headerText=\"Check box\"\n          panelNum=\"2\"\n        />,\n        <PanelContent\n          buttonText=\"Open Panel - Default Pane - Check box 3\"\n          headerText=\"Check box\"\n          panelNum=\"3\"\n        />,\n        <PanelContent\n          buttonText=\"Open Panel - Default Pane - Check box 4\"\n          headerText=\"Check box\"\n          panelNum=\"4\"\n        />,\n        <PanelContent\n          buttonText=\"Open Panel - Default Pane - Radio Buttons 1\"\n          headerText=\"Radio buttons\"\n          panelNum=\"5\"\n        />,\n        <PanelContent\n          buttonText=\"Open Panel - Default Pane - Checkbox Controls 1\"\n          headerText=\"Checkbox\"\n          panelNum=\"6\"\n        />\n    ]\n  };\n  private _hoverColor = \"#efefef\";\n  private _addPanel = () => {\n    this.setState({\n      panels: [\n        ...this.state.panels,\n        <PanelContent\n          buttonText=\"Open Panel - Default Pane - Checkbox Controls 1\"\n          headerText=\"Random\"\n          panelNum=\"7\"\n        />\n      ]\n    });\n  };\n  private _getNextLink = () => {\n    const id: string = getId(\"nextLink\");\n    return (\n      <>\n        <style>\n          {`\n          #${id} #addPanel { background: ${color(this._hoverColor)\n            .lighten(0.05)\n            .hex()};}\n          #${id}:hover #addPanel { background: ${this._hoverColor};}\n          #${id}:hover #addPanel div { text-decoration: underline; }\n          `}\n        </style>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"592px\",\n            display: \"inline-block\",\n            margin: \"15px\",\n            border: \"1px solid #efefef\",\n            cursor: \"pointer\"\n          }}\n          id={id}\n        >\n          <LayerHost\n            id={\"addPanel\"}\n            style={{\n              position: \"relative\",\n              height: \"calc(100vh - 60px)\",\n              overflow: \"hidden\",\n              padding: \"15px\"\n            }}\n            onClick={this._addPanel}\n          ><div style={{lineHeight: \"calc(100vh - 16px)\",textAlign: \"center\"}}>Click to add a new panel with random content.</div></LayerHost>\n        </div>\n      </>\n    );\n  };\n  render() {\n    return (\n      <>\n        {this.state.panels}\n        {this._getNextLink()}\n      </>\n    );\n  }\n}\n","import React, { ReactNode } from \"react\";\nimport \"./App.css\";\nimport \"office-ui-fabric-core/dist/css/fabric.min.css\";\nimport { getClassNames } from \"./App.styles\";\nimport { initializeIcons } from \"office-ui-fabric-react/lib/Icons\";\n\nimport { Fabric, Link } from \"office-ui-fabric-react\";\nimport { ShellHeader } from \"./components/ShellHeader/ShellHeader\";\nimport { Nav } from \"./components/Nav/Nav\";\n\nimport { DefaultContent } from \"./components/DefaultContent/DefaultContent\";\n\nimport { PanelContentRow } from \"./components/Content/PanelContentRow\";\n\n// Icons must be initialized in order to load their styles\ninitializeIcons(/* optional base url */);\n\nconst PageContent: React.FC = (props: { children?: ReactNode }) => {\n  return (\n    <div\n      className=\"content-wrapper\"\n      style={{ margin: \"-48px\", overflowX: \"scroll\", whiteSpace: \"nowrap\" }}\n    >\n      {/* <DefaultContent /> */}\n      <PanelContentRow />\n    </div>\n  );\n};\n\ninterface IAppState {\n  isFrameEnabled: boolean;\n}\nclass App extends React.Component<{}, IAppState> {\n  public state = {\n    isFrameEnabled: true\n  };\n  constructor(props: any) {\n    super(props);\n    const urlParams = new URLSearchParams(window.location.search);\n    const isFrameEnabled = urlParams.has(\"frame\");\n    this.state = {\n      isFrameEnabled\n    };\n  }\n  render() {\n    const {\n      root,\n      header,\n      mainWrapper,\n      content,\n      pivotsAndSearch,\n      pivotContainer,\n      footer,\n      searchBar\n    } = getClassNames();\n    const isFrameEnabled = this.state.isFrameEnabled;\n    return (\n      <Fabric>\n        <div className={root}>\n          {isFrameEnabled ? <ShellHeader /> : \"\"}\n          <section className={mainWrapper}>\n            <main className={content} data-is-scrollable={true}>\n              <PageContent />\n            </main>\n            {isFrameEnabled ? <Nav isNavCollapsed={true} /> : \"\"}\n          </section>\n          {isFrameEnabled ? <footer className={footer} /> : \"\"}\n        </div>\n      </Fabric>\n    );\n  }\n}\n\nexport default App;\n","import { mergeStyleSets } from '@uifabric/merge-styles';\r\nimport { NeutralColors, FontSizes } from '@uifabric/fluent-theme/lib/fluent';\r\n\r\nexport const getClassNames = (searching) => {\r\n  return mergeStyleSets({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n    },\r\n    header: {\r\n      fontSize: FontSizes.size28,\r\n      margin: \"0\",\r\n      marginBottom: \"25px\"\r\n    },\r\n    mainWrapper: {\r\n      display: 'flex',\r\n      flex: '1 1 auto'\r\n    },\r\n    content: {\r\n      flex: '1 1 auto',\r\n      padding: '48px',\r\n      overflow: 'scroll'\r\n    },\r\n    pivotsAndSearch: {\r\n      display: 'flex',\r\n      flexDirection: 'row-reverse',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center'\r\n    },\r\n    pivotContainer: {\r\n      display: searching ? 'none' : 'block',\r\n      selectors: {\r\n        'div:first-of-type': {\r\n          display: 'inline-flex'\r\n        }\r\n      }\r\n    },\r\n    footer: {\r\n      height: '200px',\r\n      backgroundColor: NeutralColors.gray170\r\n    },\r\n    searchBar: {\r\n      transition: '300ms all',\r\n      width: searching ? '100%' : '200px'\r\n    }\r\n  });\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}